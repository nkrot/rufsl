Задания на обработку тесткейсов и вывода утилиты run_ldb_unit_test

Задание 1
=========

Из полного отчета по тесткейсам (файл syn_qa.full), генерируемого утилитой

	> run_ldb_unit_test.rb --full

извлечь те тесткейсы, которые изменили состояние из FAILED/UNKNOWN на SUCCESS

Кроме того, скрипт должен выводить в потом ошибок информацию о количестве увиденных и извлеченных тесткейсов.
Для входного файла syn_qa.full это будет следующая строка:

	#=> Testcases total/outputted: 339/4

входной файл:	syn_qa.full
ожидаемый выход:
	changed_to_success.out.1 -- для первого (поблочного) алгоритма чтения файла
	changed_to_success.out.2 -- для второго (построчного) алгоритм чтения файла
ответ:	tc_extract_changed_to_success

В скрипте tc_extract_changed_to_success приводятся два возможных алгоритма чтения входного файла syn_qa.full.
Первый алгоритм необходимо реализовать, второй достаточно разобрать и понять.

Алгоритм #1
-----------

Читает файл блоками (= по одному тесткейсу). Это лаконичный способ, чтобы им воспользоваться,
почитайте документацию:

	> ri IO#gets

Обратите внимание на то, попадает ли разделитель в зачитанный блок (в этом аспекте ruby отличается от awk'шного RS).

Алгоритм #2
-----------
Читает файл построчно. Его сложность (и громоздкость) в том, что в нем много веток выполнения.
Исследуйте, по каким веткам идет выполнение, когда обрабатывается любая строка из входного файла.
Вставьте puts в каждую ветку и изучите на примере сокращенного файла syn_qa.full.shortened.

Дополнительное задание:

Обобщить скрипт :) Кроме как для случаев UNKNOWN->FAILED

Задание 2
=========

Разработайте скрипт, который будет исправлять REQSTATE на SUCCESS у тех тесткейсов, которые стали SUCCESS.
Файл с отчетом содержит SUCCESS тесткейсы, только если отчет был получен при помощи опции --full

	> run_ldb_unit_test.rb --full

Скрипт должен запускаться следующим образом:

	> tc_sync_reqstate tc_report_file [tc_file]

например:

	> tc_sync_reqstate syn_qa.full syn_qa.tc
	или
	> cat syn_qa.tc | tc_sync_reqstate syn_qa.full

и выводить измененные данные из tc_file

Q: Как однозначно соотнести тесткейсы?
A: В идеале, ID должно иметь уникальное значение, и поля ID должно быть достаточно. На практике этого не происходит --
   ID могут отсутствовать или повторяться -- и для надежности следует использовать комбинацию полей ID и INPUT.
   (А для большей надежности еще и ETALON).
   Если скрипт обнаруживает, что в файле больше одного тесткейса соответствуют комбинации ID+INPUT, пользователь должен
   об этом узнать, так как в этом случае требуется дополнительная проверка правильности со стороны пользователя.

Кроме того, не стоит полагаться на то, что поля в тесткейсе идут в определенном порядке и что STATE и REQSTATE предшествуют
полю ID и INPUT. Единственное, на что можно полагаться, это ключевые слова case_start/case_end.

TODO: ??? можно добавить возможность импортировать некоторые части из tc_report и расставить метки возле измененных тесткейсов, чтобы можно было проверить полученный файл. Это нужно делать по опции

Дополнительное задание:
-----------------------

Скрипт можно обобщить, чтобы он изменял REQSTATE на любое значение, которое фигурирует в файле с отчетом,
кроме изменения UNKNOWN->FAILED.


Финальное замечание
====================

Полезный скрипт достоен того, чтобы жить в testutils/ldb_unit_testing/bin/
