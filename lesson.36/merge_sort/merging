#!/usr/bin/env ruby

# merges two sorted arrays to produce a single sorted array
def merge lefts, rights
  merged = []

  li = ri = 0
  while li < lefts.length || ri < rights.length
    if li < lefts.length && (ri >= rights.length || lefts[li] <= rights[ri])
      merged << lefts[li]
      li += 1
    else
      merged << rights[ri]
      ri += 1
    end
  end

  merged
end

@counts = Hash.new {|h,k| h[k] = 0}

def test_merging_of_arrays arr1, arr2

  gold = (arr1 + arr2).sort
  actual = merge arr1, arr2

  equal = actual == gold
  @counts [equal] += 1

  unless equal
    puts "Test failed!"
    puts "Input data: #{arr1.inspect} and #{arr2.inspect}"
    puts "Expected:   #{gold.inspect}"
    puts "Actual:     #{actual.inspect}"
  end
end

test_merging_of_arrays [1,2],     [3,4]
test_merging_of_arrays [3,4],     [1,2]
test_merging_of_arrays [3,4,6],   [1,5]
test_merging_of_arrays [0,3,4,6], [2]
test_merging_of_arrays [3],       [0,3,4,6]
test_merging_of_arrays [],        [0,3,4,6]
test_merging_of_arrays [0,3,4,6], []
test_merging_of_arrays [],        []

puts "Tests passed/failed: #{@counts[true]}/#{@counts[false]}"
