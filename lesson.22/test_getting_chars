#!/usr/bin/env ruby

# # #
# (not so) funny discrepancies
#
# Excerpt from ri String#[]
# 1. In these three cases, if an index is negative, it is counted from the end of the string.
# 2. For the start and range cases the starting index is just before a character
#    and an index matching the string's size.
# 3. Additionally, an empty string is returned when the starting index for a character range
#    is at the end of the string.
# 4. Returns nil if the initial index falls outside the string or the length is negative.


puts "getting a char within string boundaries"

puts "a"[0,1] == "a"
puts "a"[0]   == "a"

puts "a"[-1,1] == "a"
puts "a"[-1]   == "a"

puts "\ngetting a char at string boundries"

puts "a"[1,1] == ""   # WTF! see 3.
puts "a"[1]   == nil  # see 4.

puts "a"[-2,1] == nil # see 4. And 3. is not applicable, this is not string END but BEGINNING
puts "a"[-2]   == nil # see 4.

puts "\ngetting a char outside string boundries"
# all cases below are explained by 4.

puts "a"[2,1] == nil
puts "a"[2]   == nil

puts "a"[-3,1] == nil
puts "a"[-3]   == nil
