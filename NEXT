
lesson.37
=========
- merge sort: analyse my in-place implementation (from lesson.36/merge_sort)
  TODO: add analytical tasks? show how to debug
- solve the task of Polina
  - theory: how to recover object from string representation thereof (serialization/deserialization)
  - theory: set operations (with Arrays)
- ОБСУДИТЬ: выбрать задачу для bruteforcing with recursion из magic_squares и 4 queens

lesson.38
=========
- representing a parse tree with a Hash (similar to lesson.35)
- solve a task on parse tree (find something, count something) SEE BELOW
- solve the task of someone else?

lesson.39 - bruteforcing with recursion
=========
- recursion as a means of bruteforcing an algorithm
  - solving magic square
  - recursive 8 queens problem
  - recursive sudoku solver
- что выбрать для code review 4?

- representing a parse tree with a special class ParseTree

чтиво по рекурсии
------------------
http://cs.stackexchange.com/questions/1418/when-to-use-recursion
http://en.wikipedia.org/wiki/Divide_and_conquer_algorithm

1. an introduction
 http://www.cs.umd.edu/class/fall2002/cmsc214/Tutorial/recursion.html

2. an way to trace recursion,very useful for first time understand recursion
http://www.cs.umd.edu/class/fall2002/cmsc214/Tutorial/trace-recursion.html

3. another introduction,very detailed,have template,mindset of recursion, useful exercises
http://www-cs-faculty.stanford.edu/~eroberts/courses/cs106b/chapters/05-intro-to-recursion.pdf

4. http://chimera.labs.oreilly.com/books/1230000000393/ch02.html#_solution_39
  здесь о том, как написать свой парсер, выдающий AST!!!


Задачки на рекурсивные структуры данных
----------------------------------------
- посчитать что-нибудь в дереве. например, количество существительных или найти самое длинное слово в дереве. Если два одной длины, выдать то, что в более левом поддереве.  pattern Visitor?

- собрать узлы верхнего уровня. и посчитать.

- Я думал о чем-нибудь древесном. есть дерево, в его глубине есть, например, слово во множественном числе. задача в том, чтобы перетащить эту фичу числа на глагол, если эта фича изначально висит на субъекте (мы знаем, что это субъект, это закодировано где-то в другой фиче)
От меня надо создать класс ParseTree.

- (на примере англ дерева) *выдрать поддерево*, в котором есть какая-нибудь херня (например, CC или причастие, распространающее именную группу). учесть, что дерево может быть ломанным - добавить искусственный верхний уровень
  это паттерн visitor ?

+ other_tasks/parse_tree/
   + от меня: преобразование скобочной формы в дерево
   + задание: написать #to_s
   + задание: написать #to_s_tree, 3 пробела = 1 уровень
      - здесь используется child.is_a?(self.class)
   + задание: посчитать количество слов (листьев) в дереве -- #word_count
      - здесь нужно показать, что такое is_a?
      - показать на рисунке с деревом, как работает вычисление суммы
   + задание: [после #word_count] собрать все слова (листья)
      - это обход графа в глубину (DFS - depth first search)

- задания на использование parse_tree:
  - найти неполные деревья
     ex: Furthermore, the present study shows that in law texts, the average distance between the heads and complements of clauses is relatively large , and that in this domain, a wide context window is therefore necessary for the morphosyntactic disambiguation of verbs.
     ex: We show that both studies in descriptive and formal morphology as well as NLP tool and resource development benefit from the availability of such a model and an implementation thereof.

  - найти такие неполные деревья, где есть несколько подряд идущих слов, не попавших в дерево. дополнительное ограничение: только в одном месте
  - исследовать деревья, в которых остались несоединенными 2+ w__Sentence
     This paper explores how much linguistically motivated rules can contribute to the task.

  - написать свой экстрактор (заодно рассказать, как работает экстрактор в просао1)	?

- Write a function that translates a number like 12345.67 to "twelve thousand three hundred forty-five dollars and sixty-seven cents."

- http://www.cs.rmit.edu.au/online/blackboard/chapter/05/documents/contribute/chapter/10/practical-uses.html

- сделать замену чего-нить в дереве

- DG-дерево интерлингвы.


Другие задачки
---------------
- найти анаграммы строки: сначала построить все permutations потом разбить их на слова. наверное, это будет работать очень долго
- задание от Оли (пересечение трех словарей). см чат в скайпе или может оля создала syntodo?
- задание от Полины (см. почту)

for code review #3 (lessons 13+)
================================
TODO: develop testcases for Syn module and handle them out as a supplement to code review 3
      publish them in lesson.xx.addon/

1) maxfreqtag
2) your own Syn module (syn.rb) that should implement the following methods
	tags   -- given a tagged string, returns all tags as an array
	words  -- given a tagged string, returns all words as an array
	untag  -- given a tagged word/sentence/relation, returns untagged word/sentence/relation as a string.
	unword -- given a tagged word/sentence, returns tag(s) as a string
	unwdc  -- given a tagged sentence/relation, collapse compound words (see slide 127 for details)
 * Hint: A relation can be distinguished from non-relations by presence of at least one \t character. The first field in the relation is always a relation name. 

3) insert_sort_to_new
4) insert_sort_in_place
5) find_all_anagrams
6) find_words
7) assign_properties

темы, которые надо рассмотреть
==============================

- сложные логические выражения
  + таблицы истинности
  ! упражнения на вычисление p && r || q

- оператор precedence
  + and or не то же самое, что && и ||
  + { } сильнее чем do end
  + присваивание: a = b || c || d

- String
  + какие полезные методы есть у String
  + как правильно делать upcase/downcase/capitalize
  + строки стали encoding-aware, как избегать проблем с invalid byte sequence
  + как работать с юникодом (правильно считать длину строки, правильно ее разбивать на символы)

- IO.popen	-- yes, they want it. this should be taught as early as possible, as it can be useful for working with CRF
  + как запускать отдельные команды, которые получают вход из скрипта
  + как запускать команды, которые не получают входа (типа date)
  + как запускать пайпы (несколько команд). проблемы буферизации
  ! Задание: сделать библиотеку вокруг какой-либо команды из коллекции утилит просао

- operations on sets: intersection, union, subtraction (complement, difference)
   task: develop a methods that a.intersect(b) => common, uniq_in_a, uniq_in_b
   task: respect number of occurrences when subtracting
	a = [1,2,3,4,1,2,3]
	b = [2,3,4]
	NOW: a - b => [1, 1] 
	SHOULD BE: a - b => [1,1,2,3]

- Regexp
  + синтаксис РВ (повторение)
  + расширения для РВ, которые есть в руби (и возможно других языках), отличные от POSIX
    в том числе ключи /m /i /u
  + DONE: операторы, работающие с РВ. автоматические глобальные переменные $1 $`
    TODO: найти полный список глобальных $-переменных руби
  + DONE: MatchData
  + как работать в юникодными РВ
  + будет ли ключ /i правильно работать с диакритиками

- Classes
  - need to figure out a few good examples of where classes come in handy

- Теория вероятности
  - nice story explaining useful terms: http://www.quora.com/Machine-Learning/In-Laymans-Terms-how-does-Naive-Bayes-work
  + lang detect

- TF-IDF

  
