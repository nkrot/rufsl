
lesson.30 - recursion
=========

- рекуррентное определение?
  перевернуть строку/массив рекурсивно
     1) оторвать первый символ
     2) перевернуть все остальное
     3) вставить оторванный символ в хвост
- взять материалы с предыдущего года
- фибоначчи, и мемоизация
- ДЗ: фибоначчи без рекурсии (циклическая реализация).
  - они должны догадаться, что надо хранить два последних
- merge sort in place
- tail recursion, аккумуляторы
http://cs.stackexchange.com/questions/1418/when-to-use-recursion
http://en.wikipedia.org/wiki/Divide_and_conquer_algorithm

чтиво по рекурсии
1. an introduction
 http://www.cs.umd.edu/class/fall2002/cmsc214/Tutorial/recursion.html

2. an way to trace recursion,very useful for first time understand recursion
http://www.cs.umd.edu/class/fall2002/cmsc214/Tutorial/trace-recursion.html

3. another introduction,very detailed,have template,mindset of recursion, useful exercises
http://www-cs-faculty.stanford.edu/~eroberts/courses/cs106b/chapters/05-intro-to-recursion.pdf

memoization:
http://en.wikipedia.org/wiki/George_Santayana:
Santayana's famous aphorism "Those who cannot remember the past are condemned to repeat it" is inscribed on a plaque at the Auschwitz concentration camp in Polish translation and English back-translation (above), and on a subway placard in Germany (below)

for code review #3 (lessons 13+)
================================
TODO: develop testcases for Syn module and handle them out as a supplement to code review 3
      publish them in lesson.xx.addon/

1) maxfreqtag
2) your own Syn module (syn.rb) that should implement the following methods
	tags   -- given a tagged string, returns all tags as an array
	words  -- given a tagged string, returns all words as an array
	untag  -- given a tagged word/sentence/relation, returns untagged word/sentence/relation as a string.
	unword -- given a tagged word/sentence, returns tag(s) as a string
	unwdc  -- given a tagged sentence/relation, collapse compound words (see slide 127 for details)
 * Hint: A relation can be distinguished from non-relations by presence of at least one \t character. The first field in the relation is always a relation name. 

3) insert_sort_to_new
4) insert_sort_in_place
5) find_all_anagrams
6) find_words
7) assign_properties

темы, которые надо рассмотреть
==============================

- сложные логические выражения
  + таблицы истинности
  ! упражнения на вычисление p && r || q

- оператор precedence
  + and or не то же самое, что && и ||
  + { } сильнее чем do end
  + присваивание: a = b || c || d

- String
  + какие полезные методы есть у String
  + как правильно делать upcase/downcase/capitalize
  + строки стали encoding-aware, как избегать проблем с invalid byte sequence
  + как работать с юникодом (правильно считать длину строки, правильно ее разбивать на символы)

- IO.popen	-- yes, they want it. this should be taught as early as possible, as it can be useful for working with CRF
  + как запускать отдельные команды, которые получают вход из скрипта
  + как запускать команды, которые не получают входа (типа date)
  + как запускать пайпы (несколько команд). проблемы буферизации
  ! Задание: сделать библиотеку вокруг какой-либо команды из коллекции утилит просао

- operations on sets: intersection, union, subtraction (complement, difference)
   task: develop a methods that a.intersect(b) => common, uniq_in_a, uniq_in_b
   task: respect number of occurrences when subtracting
	a = [1,2,3,4,1,2,3]
	b = [2,3,4]
	NOW: a - b => [1, 1] 
	SHOULD BE: a - b => [1,1,2,3]

- Regexp
  + синтаксис РВ (повторение)
  + расширения для РВ, которые есть в руби (и возможно других языках), отличные от POSIX
    в том числе ключи /m /i /u
  + DONE: операторы, работающие с РВ. автоматические глобальные переменные $1 $`
    TODO: найти полный список глобальных $-переменных руби
  + DONE: MatchData
  + как работать в юникодными РВ
  + будет ли ключ /i правильно работать с диакритиками

- Classes
  - need to figure out a few good examples of where classes come in handy

- Теория вероятности
  - nice story explaining useful terms: http://www.quora.com/Machine-Learning/In-Laymans-Terms-how-does-Naive-Bayes-work
  + lang detect

- TF-IDF

  
